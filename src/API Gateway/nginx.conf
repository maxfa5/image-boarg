# Основной конфигурационный файл nginx.conf
events {
    worker_connections 1024;
}

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

     # Исправленный формат логов (должен быть объявлен до использования)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    
    sendfile        on;
    keepalive_timeout  65;

    # Upstream сервисы
    upstream auth_service {
        server userservices-auth-1:8002;
    }
    
    upstream posts_service {
        server post_reader:8085;
    }
    
    
    upstream posts_writer_service {
        server writer:8003;
    }
    
    
    server {
        listen 80;
        server_name api.example.com;
        
        # Локация для проверки токенов
        location = /_validate_token {
            internal;
            proxy_pass http://userservices-auth-1:8002/api/data; 
            proxy_pass_request_body off;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $host;
            access_log /var/log/nginx/validate_token.log main;
            error_log /var/log/nginx/validate_token_error.log debug;
        }
        

        # Публичные endpoints (не требуют аутентификации)
        location /api/auth/login {
            proxy_pass http://userservices-auth-1:8002/auth/login;
            proxy_pass_request_body on;
        }
        # Обработка /api/register
        location /api/register {
            proxy_pass http://userservices-registration-service-1:8001/api/users/register;
            proxy_pass_request_body on;
        }
        # Основной API endpoint
        location /api {
            # Проверяем токен через auth-сервис
            auth_request /_validate_token;

            location = /api/messages {
                # Дополнительные настройки если нужно
                proxy_pass http://post_reader:8085/api/messages;
            }

            location = /api/threads {
                # Дополнительные настройки если нужно
                proxy_pass http://post_reader:8085/api/threads;
            }

            # Обработка /api/messages/{uuid}
            location /api/messages/ {

                proxy_pass http://post_reader:8085/api/messages/;
            }
            # Обработка /api/push
            location /api/push {

                proxy_pass http://writer:8003/push;
            }
            # Обработка ошибок
            error_page 401 = @unauthorized;
            error_page 403 = @forbidden;
        }
        
        location @unauthorized {
            return 401 '{"error": "Unauthorized"}';
        }
        
        location @forbidden {
            return 403 '{"error": "Forbidden"}';
        }
    }
}